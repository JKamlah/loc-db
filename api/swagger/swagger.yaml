swagger: "2.0"
info:
  version: "0.0.1"
  title: LOC-DB Central Component
host: localhost
basePath: /
tags:
  - name: User
    description: Services related to user management.
  - name: BibliographicResource
    description: Services related to bibliographic resources.
  - name: Scan
    description: Services related to scans.
  - name: BibliographicEntry
    description: Services related to bibliographic entries.
schemes:
  #- http
  - https
consumes:
  - application/json
  - multipart/form-data
produces:
  - application/json
  - image/png
  - application/pdf
securityDefinitions:
  basicAuth:
    type: basic
  login:
    type: basic

# To apply Basic auth to the whole API:
security:
  - basicAuth: []


paths:
  /addFeed:
    x-swagger-router-controller: user
    post:
      tags: [User]
      description: Adds an RSS or Atom Feed the users feed list
      operationId: addFeed
      parameters:
        - name: feed
          in: body
          description: The feed object consisting of name (may be user specified) and URL of the feed
          required: true
          schema:
              $ref: "#/definitions/Feed"
      responses:
        "200":
          description: Success
          schema:
              $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /fetchFeeds:
    x-swagger-router-controller: user
    get:
      tags: [User]
      description: Fetches all the feeds entries a user subscribed to
      operationId: fetchFeeds
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: array
              items:
                $ref: "#/definitions/FeedEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /deleteFeed/{id}:
    x-swagger-router-controller: user
    delete:
      tags: [User]
      description: Deletes an RSS or Atom Feed from the users feed list
      operationId: deleteFeed
      parameters:
        - name: id
          in: path
          description: The id of the feed to be deleted from the users feed list
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
              $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: user
    post:
      tags: [User]
      description: Login service
      operationId: login
      security:
        - login: []
      parameters:
        - name: user
          in: body
          description: The user object consisting of username and password
          required: true
          schema:
              $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
              $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /signup:
    x-swagger-router-controller: user
    post:
      tags: [User]
      description: Signup service
      operationId: signup
      parameters:
        - name: user
          in: body
          description: The user object consisting of username and password
          required: true
          schema:
              $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
              $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /logout:
    x-swagger-router-controller: user
    get:
      tags: [User]
      description: Logout service
      operationId: logout
      responses:
        "200":
          description: Success
          schema:
              $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /bibliographicResources:
    x-swagger-router-controller: bibliographicResource
    get:
      tags: [BibliographicResource]
      description: Returns a list of bibliographic resources
      operationId: list
      responses:
        "200":
          description: Success
          schema:
            type: array
            items: 
              $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: [BibliographicResource]
      description: Deletes all (!) bibliographic resources (may be removed in a later stage)
      operationId: deleteAll
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: [BibliographicResource]
      description: Saves a new bibliographic resource into the database
      operationId: save
      parameters:
        - name: bibliographicResource
          in: body
          description: A bibliographic resource to be saved in the database
          required: true
          schema:
            $ref: "#/definitions/BibliographicResource"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getPublisherUrl:
    x-swagger-router-controller: bibliographicResource
    get:
      tags: [BibliographicResource]
      description: |
        Given a unique identifier of a bibliographic resource from a union catalog, such as for example an SWB-PICA-Prod-Nr. (PPN), as well as the type of the resource,
        this service retrieves the URL to the publisher website if available.
        This services is intended for use in the workflow for electronic resources.
        TODO: Shall we extend that service such that the BR is also written into the db and the whole br is returned?
      operationId: getPublisherUrl
      parameters:
        - name: ppn
          in: query
          description: The identifier of the bibliographic resource in the union catalog for which the publisher URL shall be retrieved
          required: true
          type: string
        - name: resourceType
          in: query
          description: The type of the bibliographic resource
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Identifier"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /saveElectronicJournal:
    x-swagger-router-controller: bibliographicResource
    get:
      tags: [BibliographicResource]
      description: |
        Given an article doi this service retrieves meta data from Crossref and save a new bibliographic resource in our db.
      operationId: saveElectronicJournal
      parameters:
        - name: doi
          in: query
          description: The doi of the article for which the meta data shall be retrieved.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Identifier"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"



  /getCrossrefReferences:
    x-swagger-router-controller: bibliographicResource
    post:
      tags: [BibliographicResource]
      description: |
        Returns the br including a list of bibliographic entries retrieved via Crossref. If there is a doi
        given in the br, the search will be performed based on the identifier and at max one br will be returned.
        Is no doi given, the search will be fuzzy based on a combination of several br fields (title, subtitle, author,..).
        The br returned is not the one in our mongo. You only get Crossref data. A working doi example in the domain of sociology is "10.1007/s11617-006-0056-1".
      operationId: getCrossrefReferences
      parameters:
        - name: bibliographicResource
          in: body
          description: A bibliographic resource for which the Crossref references should be retrieved
          required: true
          schema:
            $ref: "#/definitions/BibliographicResource"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /bibliographicEntries/{id}:
    x-swagger-router-controller: bibliographicEntry
    put:
      tags: [BibliographicEntry]
      description: Updates a given bibliographic entry by id. Note that the status needs to be changed to VALID if this service is called after validation by a librarian. Properties that are not given with the update data are preserved.
      operationId: update
      parameters:
        - name: id
          in: path
          description: The _id of the bibliographic entry to be updated.
          required: true
          type: string
        - name: bibliographicEntry
          in: body
          description: A bibliographic entry with new values to be updated.
          required: true
          schema:
            $ref: "#/definitions/BibliographicEntry"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BibliographicEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: [BibliographicEntry]
      description: Deletes a given bibliographic entry by id.
      operationId: remove
      parameters:
        - name: id
          in: path
          description: The _id of the bibliographic entry to be deleted.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BibliographicEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /addTargetBibliographicResource:
    x-swagger-router-controller: bibliographicEntry
    get:
      tags: [BibliographicEntry]
      description: |
        Given the _id of a bibliographic entry and the _id of a target, i.e., a cited, bibliographic resource,
        this service takes care of setting all related properties in a consistent way. More precisely, the following three things happen:
        1) The 'status' of the bibliographic entry will be changed to VALID
        2) The 'references' property of the bibliographic entry will be set to the _id of the target bibliographic resource
        3) The 'cites' property of the parent resource of the entry will be extended with the _id of the target bibliographic reource
      operationId: addTargetBibliographicResource
      parameters:
        - name: bibliographicEntryId
          in: query
          description: The _id of the subject bibliographic entry that should point to the target bibliographic resource
          required: true
          type: string
        - name: bibliographicResourceId
          in: query
          description: The _id of the target bibliographic resource which the bibliographic entry should point to
          required: true
          type: string
      responses:
        "200":
          description: Success; In case the operation suceeds, the updated source bibliographic resource including the respective bibliographic entry will be returned
          schema:
            $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /removeTargetBibliographicResource:
    x-swagger-router-controller: bibliographicEntry
    get:
      tags: [BibliographicEntry]
      description: |
        Given the _id of a bibliographic entry this service clears all properties related to a potential target resource in a consistent way. More precisely, the following three things happen:
        1) The 'references' property of the bibliographic entry will be cleared
        2) The _id of the old target resource will be removed from teh 'cites' property of the parent resource of the entry
        3) The 'status' of the bibliographic entry will be changed to OCR_PROCESSED --> Is this always ok?
        Note that the old target bibliographic resource will not be deleted.
      operationId: removeTargetBibliographicResource
      parameters:
        - name: bibliographicEntryId
          in: query
          description: The _id of the subject bibliographic entry that should point to the target bibliographic resource
          required: true
          type: string
      responses:
        "200":
          description: Success; In case the operation suceeds, the updated source bibliographic resource including the respective bibliographic entry will be returned
          schema:
            $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /bibliographicResources/{id}:
    x-swagger-router-controller: bibliographicResource
    get:
      tags: [BibliographicResource]
      description: Returns a single bibliographic resource by id
      operationId: get
      parameters:
        - name: id
          in: path
          description: The internal identifier of the bibliographic resource
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: [BibliographicResource]
      description: Deletes a single bibliographic resource by id
      operationId: deleteSingle
      parameters:
        - name: id
          in: path
          description: The internal identifier of the bibliographic resource
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags: [BibliographicResource]
      description: Updates an existing bibliographic resource
      operationId: update
      parameters:
        - name: id
          in: path
          description: The _id of the bibliographic resource to be updated.
          required: true
          type: string
        - name: bibliographicResource
          in: body
          description: A bibliographic resource to be updated
          required: true
          schema:
            $ref: "#/definitions/BibliographicResource"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /saveScan:
    x-swagger-router-controller: scan
    post:
      tags: [Scan]
      description: Saves a scan in the file system and retrieves a biliographic ressource from SWB-BSZ by PICA-Prod-Nr.The br is saved in the DB.
      operationId: saveScan
      parameters:
        - name: ppn
          in: formData
          description: The PICA-Prod-Nr. assigned by SWB
          required: true
          type: string
        - name: firstPage
          in: formData
          description: The number of the first page of the resource.
          required: false
          type: number
        - name: lastPage
          in: formData
          description: The number of the last page of the resource.
          required: false
          type: number
        - name: scan
          in: formData
          description: The scanned image of the reference page (binary file)
          required: true
          type: file
        - name: resourceType
          in: formData
          description: The type of the resource.
          required: true
          type: string
          enum: [MONOGRAPH, JOURNAL, COLLECTION]
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /saveScanForElectronicJournal:
      x-swagger-router-controller: scan
      post:
        tags: [Scan]
        description: Saves a scan in the file system and retrieves a biliographic ressource from SWB-BSZ by PICA-Prod-Nr.The br is saved in the DB.
        operationId: saveScanForElectronicJournal
        parameters:
          - name: doi
            in: formData
            description: The DOI of the Article
            required: true
            type: string
          - name: scan
            in: formData
            description: The scanned image of the reference page (binary file)
            required: true
            type: file
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/BibliographicResource"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
            
  /getToDo:
    x-swagger-router-controller: scan
    get:
      tags: [Scan]
      description: Retrieves the BRs including their associated parts and scans that are either not processed or processed by the OCR-component or retrieved from external.
      operationId: getToDo
      parameters:
        - name: status
          in: query
          description: The status for which the ToDo-list shall be retrieved
          required: true
          type: string
          enum:
            - NOT_OCR_PROCESSED
            - OCR_PROCESSED
            - EXTERNAL
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ToDo"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /scans/{id}:
    x-swagger-router-controller: scan
    get:
      tags: [Scan]
      description: Returns a single scan by id
      operationId: get
      parameters:
        - name: id
          in: path
          description: The internal identifier of the scan
          required: true
          type: string
      responses:
        200:
          description: Returns Scan
          schema: 
            type: file
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /triggerOcrProcessing:
    x-swagger-router-controller: scan
    get:
      tags: [Scan]
      description: Send a processing request to the OCR component.
      parameters:
        - name: id
          in: query
          description: The unique id of the scan which should be send to the OCR component
          required: true
          type: string
      operationId: triggerOcrProcessing
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /createBibliographicResourceByPPN:
    x-swagger-router-controller: bibliographicResource
    get:
      tags: [BibliographicResource]
      description: Get bibliographic resource by PICA-Prod-Nr.
      operationId: createByPPN
      parameters:
        - name: ppn
          in: query
          description: The PICA-Prod-Nr. assigned by SWB
          required: true
          type: string
        - name: resourceType
          in: query
          description: The type of the resource
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /getToDoBibliographicEntries:
    x-swagger-router-controller: bibliographicEntry
    get:
      tags: [BibliographicEntry]
      description: Retrieves the BEs that are not processed by a librarian yet.
      operationId: getToDoBibliographicEntries
      parameters:
        - name: scanId
          in: query
          description: The Id of the Scan for which the BEs shall be retrieved
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BibliographicEntry"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getInternalSuggestions:
    x-swagger-router-controller: bibliographicEntry
    post:
      tags: [BibliographicEntry]
      description: Retrieves internal br suggestions for a given (probably messy) be.
      operationId: getInternalSuggestions
      parameters:
        - name: bibliographicEntry
          in: body
          description: The be for which the suggestions shall be retrieved
          required: true
          schema:
            $ref: "#/definitions/BibliographicEntry"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"


  /getInternalSuggestionsByQueryString:
    x-swagger-router-controller: bibliographicEntry
    get:
      tags: [BibliographicEntry]
      description: Retrieves internal br suggestions for a given query string related to a bibliographic entry.
      operationId: getInternalSuggestionsByQueryString
      parameters:
        - name: query
          in: query
          description: The query string for which the suggestions shall be retrieved
          required: true
          type: string
        - name: threshold
          in: query
          description: The elastic relevance score for above which entrys shall be retrieved
          required: false
          type: number
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getExternalSuggestions:
    x-swagger-router-controller: bibliographicEntry
    post:
      tags: [BibliographicEntry]
      description: Retrieves external br suggestions for a given (probably messy) be.
      operationId: getExternalSuggestions
      parameters:
        - name: bibliographicEntry
          in: body
          description: The be for which the suggestions shall be retrieved
          required: true
          schema:
            $ref: "#/definitions/BibliographicEntry"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /getExternalSuggestionsByQueryString:
    x-swagger-router-controller: bibliographicEntry
    get:
      tags: [BibliographicEntry]
      description: Retrieves external br suggestions for a given query string related to a bibliographic entry.
      operationId: getExternalSuggestionsByQueryString
      parameters:
        - name: query
          in: query
          description: The query string for which the suggestions shall be retrieved
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BibliographicResource"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /swagger:
    x-swagger-pipe: swagger_raw



definitions:

  BibliographicResource:
    properties:
      _id:
        type: string
      identifiers:
        type: array
        items:
          $ref: "#/definitions/Identifier"
      type:
        type: string
      title:
        type: string
      subtitle:
        type: string
      edition:
        type: string
      number:
        type: string
      contributors:
        type: array
        items:
          $ref: "#/definitions/AgentRole"
      publicationYear:
        type: string
      status:
        type: string
      parts:
        type: array
        items:
          $ref: "#/definitions/BibliographicEntry"
      partOf:
        type: string
      cites:
        type: array
        items:
          type: string
      embodiedAs:
        type: array
        items:
          $ref: "#/definitions/ResourceEmbodiment"
  
  Identifier:
    required:
      - literalValue
      - scheme
    properties:
      literalValue:
        type: string
      scheme:
        type: string
        
  AgentRole:
    required:
      - roleType
    properties:
      identifiers:
        type: array
        items:
          $ref: "#/definitions/Identifier"
      roleType:
        type: string
      heldBy:
        $ref: "#/definitions/ResponsibleAgent"
        
  ResponsibleAgent:
    properties:
      identifiers:
        type: array
        items:
          $ref: "#/definitions/Identifier"
      nameString:
        type: string
      givenName:
        type: string
      familyName:
        type: string
  
  ResourceEmbodiment:
    properties:
      type:
        type: string
      format:
        type: string
      firstPage:
        type: number
      lastPage:
        type: number
      url:
        type: string
      scans:
        type: array
        items:
          $ref: "#/definitions/ToDoParts"

#  Scan:
#    required:
#      - scanName
#    properties:
#      scanName:
#        type: string
#      xmlName:
#        type: string
#      status:
#        type: string

  BibliographicEntry:
    properties:
      _id:
        type: string
      bibliographicEntryText:
        type: string
      references:
        type: string
      scanId:
        type: string
      status:
        type: string
      ocrData:
        $ref: "#/definitions/OCRData"


  OCRData:
    properties:
      coordinates:
        type: string
      authors:
        type: array
        items:
          type: string
      title:
        type: string
      date:
        type: string
      marker:
        type: string
      comments:
        type: string
      journal:
        type: string
      volume:
        type: string

  ToDo:
    required:
      - _id
    properties:
      _id:
        type: string
      identifiers:
        type: array
        items:
          $ref: "#/definitions/Identifier"
      type:
        type: string
      title:
        type: string
      subtitle:
        type: string
      edition:
        type: string
      number:
        type: number
      contributors:
        type: array
        items:
          $ref: "#/definitions/AgentRole"
      publicationYear:
        type: string
      children:
        type: array
        items:
          $ref: "#/definitions/ToDoParts"

  ToDoParts:
    required:
      - _id
    properties:
      _id:
        type: string
      status:
        type: string
      scans:
        type: array
        items:
          $ref: "#/definitions/ToDoScans"

  ToDoScans:
    required:
      - _id
    properties:
      _id:
        type: string
      status:
        type: string

  User:
    properties:
      username:
        type: string
      password:
        type: string
      feeds:
        type: array
        items:
          $ref: "#/definitions/Feed"

  Feed:
    properties:
      _id:
        type: string
      name:
        type: string
      url:
        type: string

  FeedEntry:
    description: |
      An entry returned by an RSS/ Atom/ RDF feed.
      A description of all the fields can be found here: https://www.npmjs.com/package/feedparser
    properties:
      title:
        type: string
      description:
        type: string
      summary:
        type: string
      link:
        type: string
      origlink:
        type: string
      permalink:
        type: string
      date:
        type: string
      pubdate:
        type: string
      author:
        type: string
      guid:
        type: string
      comments:
        type: string
      image:
        properties:
          url:
            type: string
          title:
            type: string
      categories:
        type: array
        items:
          type: string
      source:
        properties:
          url:
            type: string
          title:
            type: string
      enclosures:
        type: array
        items:
          properties:
            url:
              type: string
            type:
              type: string
            length:
              type: string
      meta:
        properties:
          title:
            type: string
          description:
            type: string
          link:
            type: string
          xmlurl:
            type: string
          date:
            type: string
          pubdate:
            type: string
          author:
            type: string
          language:
            type: string
          image:
            properties:
              url:
                type: string
              title:
                type: string
          favicon:
            type: string
          copyright:
            type: string
          generator:
            type: string
          categories:
            type: array
            items:
              type: string

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
